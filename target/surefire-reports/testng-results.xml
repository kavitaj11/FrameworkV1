<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="11" failed="2" total="23" passed="10">
  <reporter-output>
  </reporter-output>
  <suite name="CollectiveSuite" duration-ms="1332701" started-at="2015-12-18T13:31:27Z" finished-at="2015-12-18T13:53:39Z">
    <groups>
    </groups>
    <test name="SmokeTesting" duration-ms="1332701" started-at="2015-12-18T13:31:27Z" finished-at="2015-12-18T13:53:39Z">
      <class name="org.collective.testmethods.CollectiveSanityTestCustomer">
        <test-method status="PASS" signature="screenshotCleanUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="screenshotCleanUp" is-config="true" duration-ms="54" started-at="2015-12-18T19:01:27Z" finished-at="2015-12-18T19:01:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotCleanUp -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="beforeTest" is-config="true" duration-ms="2643" started-at="2015-12-18T19:01:27Z" finished-at="2015-12-18T19:01:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="checkForLogin" is-config="true" duration-ms="73" started-at="2015-12-18T19:01:29Z" finished-at="2015-12-18T19:01:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="setUp" is-config="true" duration-ms="13937" started-at="2015-12-18T19:01:29Z" finished-at="2015-12-18T19:01:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tc001_collective_signup()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="tc001_collective_signup" duration-ms="19339" started-at="2015-12-18T19:01:43Z" finished-at="2015-12-18T19:02:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc001_collective_signup -->
        <test-method status="PASS" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="checkForAdminLogout" is-config="true" duration-ms="47" started-at="2015-12-18T19:02:03Z" finished-at="2015-12-18T19:02:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="takeScreenshot" is-config="true" duration-ms="1" started-at="2015-12-18T19:02:03Z" finished-at="2015-12-18T19:02:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc001_collective_signup status=SUCCESS method=CollectiveSanityTestCustomer.tc001_collective_signup()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="checkForLogin" is-config="true" duration-ms="18" started-at="2015-12-18T19:02:03Z" finished-at="2015-12-18T19:02:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="setUp" is-config="true" duration-ms="3096" started-at="2015-12-18T19:02:03Z" finished-at="2015-12-18T19:02:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tc002_collective_login()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="tc002_collective_login" duration-ms="9957" started-at="2015-12-18T19:02:06Z" finished-at="2015-12-18T19:02:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc002_collective_login -->
        <test-method status="PASS" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="checkForAdminLogout" is-config="true" duration-ms="20071" started-at="2015-12-18T19:02:16Z" finished-at="2015-12-18T19:02:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="takeScreenshot" is-config="true" duration-ms="1" started-at="2015-12-18T19:02:36Z" finished-at="2015-12-18T19:02:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc002_collective_login status=SUCCESS method=CollectiveSanityTestCustomer.tc002_collective_login()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="checkForLogin" is-config="true" duration-ms="20036" started-at="2015-12-18T19:02:36Z" finished-at="2015-12-18T19:02:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="setUp" is-config="true" duration-ms="45703" started-at="2015-12-18T19:02:56Z" finished-at="2015-12-18T19:03:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tc003_collective_blog()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="tc003_collective_blog" duration-ms="23006" started-at="2015-12-18T19:03:42Z" finished-at="2015-12-18T19:04:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc003_collective_blog -->
        <test-method status="PASS" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="checkForAdminLogout" is-config="true" duration-ms="20042" started-at="2015-12-18T19:04:05Z" finished-at="2015-12-18T19:04:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2015-12-18T19:04:25Z" finished-at="2015-12-18T19:04:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc003_collective_blog status=SUCCESS method=CollectiveSanityTestCustomer.tc003_collective_blog()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="checkForLogin" is-config="true" duration-ms="20032" started-at="2015-12-18T19:04:25Z" finished-at="2015-12-18T19:04:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="setUp" is-config="true" duration-ms="80381" started-at="2015-12-18T19:04:45Z" finished-at="2015-12-18T19:06:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tc004_collective_accessories()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="tc004_collective_accessories" duration-ms="7890" started-at="2015-12-18T19:06:05Z" finished-at="2015-12-18T19:06:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc004_collective_accessories -->
        <test-method status="PASS" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="checkForAdminLogout" is-config="true" duration-ms="20049" started-at="2015-12-18T19:06:13Z" finished-at="2015-12-18T19:06:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2015-12-18T19:06:33Z" finished-at="2015-12-18T19:06:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc004_collective_accessories status=SUCCESS method=CollectiveSanityTestCustomer.tc004_collective_accessories()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="checkForLogin" is-config="true" duration-ms="20078" started-at="2015-12-18T19:06:33Z" finished-at="2015-12-18T19:06:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="setUp" is-config="true" duration-ms="118792" started-at="2015-12-18T19:06:53Z" finished-at="2015-12-18T19:08:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tc005_collective_accessories_Filter_Brand()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="tc005_collective_accessories_Filter_Brand" duration-ms="7358" started-at="2015-12-18T19:08:52Z" finished-at="2015-12-18T19:08:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc005_collective_accessories_Filter_Brand -->
        <test-method status="PASS" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="checkForAdminLogout" is-config="true" duration-ms="20088" started-at="2015-12-18T19:08:59Z" finished-at="2015-12-18T19:09:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2015-12-18T19:09:19Z" finished-at="2015-12-18T19:09:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc005_collective_accessories_Filter_Brand status=SUCCESS method=CollectiveSanityTestCustomer.tc005_collective_accessories_Filter_Brand()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="checkForLogin" is-config="true" duration-ms="20015" started-at="2015-12-18T19:09:19Z" finished-at="2015-12-18T19:09:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="setUp" is-config="true" duration-ms="255299" started-at="2015-12-18T19:09:39Z" finished-at="2015-12-18T19:13:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tc006_collective_accessories_pagination()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="tc006_collective_accessories_pagination" duration-ms="8904" started-at="2015-12-18T19:13:55Z" finished-at="2015-12-18T19:14:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc006_collective_accessories_pagination -->
        <test-method status="PASS" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="checkForAdminLogout" is-config="true" duration-ms="20061" started-at="2015-12-18T19:14:04Z" finished-at="2015-12-18T19:14:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2015-12-18T19:14:24Z" finished-at="2015-12-18T19:14:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc006_collective_accessories_pagination status=SUCCESS method=CollectiveSanityTestCustomer.tc006_collective_accessories_pagination()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="checkForLogin" is-config="true" duration-ms="20037" started-at="2015-12-18T19:14:24Z" finished-at="2015-12-18T19:14:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="setUp" is-config="true" duration-ms="62809" started-at="2015-12-18T19:14:44Z" finished-at="2015-12-18T19:15:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tc007_collective_sales()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="tc007_collective_sales" duration-ms="8351" started-at="2015-12-18T19:15:47Z" finished-at="2015-12-18T19:15:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc007_collective_sales -->
        <test-method status="PASS" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="checkForAdminLogout" is-config="true" duration-ms="20057" started-at="2015-12-18T19:15:55Z" finished-at="2015-12-18T19:16:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2015-12-18T19:16:15Z" finished-at="2015-12-18T19:16:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc007_collective_sales status=SUCCESS method=CollectiveSanityTestCustomer.tc007_collective_sales()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="checkForLogin" is-config="true" duration-ms="20080" started-at="2015-12-18T19:16:15Z" finished-at="2015-12-18T19:16:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="setUp" is-config="true" duration-ms="20577" started-at="2015-12-18T19:16:35Z" finished-at="2015-12-18T19:16:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tc008_collective_orderGreaterThan20000()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="tc008_collective_orderGreaterThan20000" duration-ms="65181" started-at="2015-12-18T19:16:56Z" finished-at="2015-12-18T19:18:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc008_collective_orderGreaterThan20000 -->
        <test-method status="PASS" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="checkForAdminLogout" is-config="true" duration-ms="20042" started-at="2015-12-18T19:18:01Z" finished-at="2015-12-18T19:18:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2015-12-18T19:18:21Z" finished-at="2015-12-18T19:18:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc008_collective_orderGreaterThan20000 status=SUCCESS method=CollectiveSanityTestCustomer.tc008_collective_orderGreaterThan20000()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="checkForLogin" is-config="true" duration-ms="20044" started-at="2015-12-18T19:18:21Z" finished-at="2015-12-18T19:18:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="setUp" is-config="true" duration-ms="20757" started-at="2015-12-18T19:18:41Z" finished-at="2015-12-18T19:19:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="tc009_collective_orderLessOrEqualThan20000()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="tc009_collective_orderLessOrEqualThan20000" duration-ms="60029" started-at="2015-12-18T19:19:02Z" finished-at="2015-12-18T19:20:02Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Timed out after 5 seconds waiting for visibility of Proxy element for: org.openqa.selenium.support.pagefactory.DefaultElementLocator@72d6b3ba
Build info: version: '2.44.0', revision: '76d78cf323ce037c5f92db6c1bba601c2ac43ad8', time: '2014-10-23 13:11:40'
System info: host: 'codebrahma', ip: '192.168.56.1', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_60'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, chrome={userDataDir=C:\Users\codeb\AppData\Local\Temp\scoped_dir10056_5760}, takesHeapSnapshot=true, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=47.0.2526.106, platform=WIN8_1, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: e0127119570959af425e9c0e777e8d18]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Timed out after 5 seconds waiting for visibility of Proxy element for: org.openqa.selenium.support.pagefactory.DefaultElementLocator@72d6b3ba
Build info: version: '2.44.0', revision: '76d78cf323ce037c5f92db6c1bba601c2ac43ad8', time: '2014-10-23 13:11:40'
System info: host: 'codebrahma', ip: '192.168.56.1', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_60'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, chrome={userDataDir=C:\Users\codeb\AppData\Local\Temp\scoped_dir10056_5760}, takesHeapSnapshot=true, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=47.0.2526.106, platform=WIN8_1, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: e0127119570959af425e9c0e777e8d18
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:79)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
	at org.collective.utils.Waiting.explicitWaitVisibilityOfElement(Waiting.java:34)
	at org.collective.customer.pageobjects.CollectiveShoppingCartPageObjects.enterFirstName(CollectiveShoppingCartPageObjects.java:83)
	at org.collective.testmethods.CollectiveSanityTestCustomer.tc009_collective_orderLessOrEqualThan20000(CollectiveSanityTestCustomer.java:151)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:773)
	at org.testng.TestRunner.run(TestRunner.java:623)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1110)
	at org.testng.TestNG.run(TestNG.java:1018)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//input[@id='order_bill_address_attributes_firstname']"}
  (Session info: chrome=47.0.2526.106)
  (Driver info: chromedriver=2.20.353145 (343b531d31eeb933ec778dbcf7081628a1396067),platform=Windows NT 6.3 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 20.05 seconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.44.0', revision: '76d78cf323ce037c5f92db6c1bba601c2ac43ad8', time: '2014-10-23 13:11:40'
System info: host: 'codebrahma', ip: '192.168.56.1', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_60'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, chrome={userDataDir=C:\Users\codeb\AppData\Local\Temp\scoped_dir10056_5760}, takesHeapSnapshot=true, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=47.0.2526.106, platform=WIN8_1, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: e0127119570959af425e9c0e777e8d18
	at sun.reflect.GeneratedConstructorAccessor12.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:204)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:156)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:599)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:352)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:449)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:357)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:59)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:37)
	at com.sun.proxy.$Proxy10.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:227)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:39)
	at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:213)
	at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:210)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:208)
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc009_collective_orderLessOrEqualThan20000 -->
        <test-method status="PASS" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="checkForAdminLogout" is-config="true" duration-ms="20030" started-at="2015-12-18T19:20:02Z" finished-at="2015-12-18T19:20:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="takeScreenshot" is-config="true" duration-ms="309" started-at="2015-12-18T19:20:22Z" finished-at="2015-12-18T19:20:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc009_collective_orderLessOrEqualThan20000 status=FAILURE method=CollectiveSanityTestCustomer.tc009_collective_orderLessOrEqualThan20000()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="checkForLogin" is-config="true" duration-ms="20042" started-at="2015-12-18T19:20:22Z" finished-at="2015-12-18T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="setUp" is-config="true" duration-ms="211" started-at="2015-12-18T19:20:42Z" finished-at="2015-12-18T19:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="tc010_collective_orderPlacement()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="tc010_collective_orderPlacement" duration-ms="20057" started-at="2015-12-18T19:20:42Z" finished-at="2015-12-18T19:21:02Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"a[href='/login']"}
  (Session info: chrome=47.0.2526.106)
  (Driver info: chromedriver=2.20.353145 (343b531d31eeb933ec778dbcf7081628a1396067),platform=Windows NT 6.3 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 20.05 seconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.44.0', revision: '76d78cf323ce037c5f92db6c1bba601c2ac43ad8', time: '2014-10-23 13:11:40'
System info: host: 'codebrahma', ip: '192.168.56.1', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_60'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, chrome={userDataDir=C:\Users\codeb\AppData\Local\Temp\scoped_dir10056_5760}, takesHeapSnapshot=true, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=47.0.2526.106, platform=WIN8_1, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: e0127119570959af425e9c0e777e8d18]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"a[href='/login']"}
  (Session info: chrome=47.0.2526.106)
  (Driver info: chromedriver=2.20.353145 (343b531d31eeb933ec778dbcf7081628a1396067),platform=Windows NT 6.3 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 20.05 seconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.44.0', revision: '76d78cf323ce037c5f92db6c1bba601c2ac43ad8', time: '2014-10-23 13:11:40'
System info: host: 'codebrahma', ip: '192.168.56.1', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_60'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, chrome={userDataDir=C:\Users\codeb\AppData\Local\Temp\scoped_dir10056_5760}, takesHeapSnapshot=true, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=47.0.2526.106, platform=WIN8_1, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: e0127119570959af425e9c0e777e8d18
	at sun.reflect.GeneratedConstructorAccessor12.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:204)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:156)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:599)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:352)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:441)
	at org.openqa.selenium.By$ByCssSelector.findElement(By.java:425)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
	at org.collective.customer.pageobjects.CollectiveHomePageObjects.clickLoginLink(CollectiveHomePageObjects.java:89)
	at org.collective.testmethods.CollectiveSanityTestCustomer.tc010_collective_orderPlacement(CollectiveSanityTestCustomer.java:174)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:773)
	at org.testng.TestRunner.run(TestRunner.java:623)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1110)
	at org.testng.TestNG.run(TestNG.java:1018)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc010_collective_orderPlacement -->
        <test-method status="PASS" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="checkForAdminLogout" is-config="true" duration-ms="20018" started-at="2015-12-18T19:21:02Z" finished-at="2015-12-18T19:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="takeScreenshot" is-config="true" duration-ms="181" started-at="2015-12-18T19:21:22Z" finished-at="2015-12-18T19:21:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc010_collective_orderPlacement status=FAILURE method=CollectiveSanityTestCustomer.tc010_collective_orderPlacement()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="checkForLogin" is-config="true" duration-ms="20020" started-at="2015-12-18T19:21:23Z" finished-at="2015-12-18T19:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="setUp" is-config="true" duration-ms="21440" started-at="2015-12-18T19:21:43Z" finished-at="2015-12-18T19:22:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tc011_collective_womenTab()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="tc011_collective_womenTab" duration-ms="5240" started-at="2015-12-18T19:22:04Z" finished-at="2015-12-18T19:22:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc011_collective_womenTab -->
        <test-method status="PASS" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="checkForAdminLogout" is-config="true" duration-ms="20057" started-at="2015-12-18T19:22:09Z" finished-at="2015-12-18T19:22:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2015-12-18T19:22:29Z" finished-at="2015-12-18T19:22:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc011_collective_womenTab status=SUCCESS method=CollectiveSanityTestCustomer.tc011_collective_womenTab()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="SKIP" signature="tearDownClass()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1e965684]" name="tearDownClass" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:40Z" finished-at="2015-12-18T19:23:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- org.collective.testmethods.CollectiveSanityTestCustomer -->
      <class name="org.collective.testmethods.CollectiveSanityTestAdmin">
        <test-method status="PASS" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="checkForLogin" is-config="true" duration-ms="3275" started-at="2015-12-18T19:22:29Z" finished-at="2015-12-18T19:22:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="setUp" is-config="true" duration-ms="2215" started-at="2015-12-18T19:22:33Z" finished-at="2015-12-18T19:22:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tc012_collective_adminLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="tc012_collective_adminLogin" duration-ms="43564" started-at="2015-12-18T19:22:35Z" finished-at="2015-12-18T19:23:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc012_collective_adminLogin -->
        <test-method status="FAIL" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="checkForAdminLogout" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:18Z" finished-at="2015-12-18T19:23:18Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Signed out successfully.] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Signed out successfully.] but found []
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:178)
	at org.testng.Assert.assertEquals(Assert.java:188)
	at org.collective.customer.pageobjects.CollectiveHomePageObjects.verifyLogout(CollectiveHomePageObjects.java:108)
	at org.collective.maincontroller.MainController.checkForAdminLogout(MainController.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:510)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:211)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:708)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:773)
	at org.testng.TestRunner.run(TestRunner.java:623)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1110)
	at org.testng.TestNG.run(TestNG.java:1018)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="SKIP" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="SKIP" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="checkForLogin" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="setUp" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="tc013_collective_admin_reports_OrderTotalsSheet()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="tc013_collective_admin_reports_OrderTotalsSheet" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc013_collective_admin_reports_OrderTotalsSheet -->
        <test-method status="SKIP" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="setUp" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="checkForAdminLogout" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="SKIP" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="checkForLogin" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="SKIP" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="SKIP" signature="tc014_evaluateAdminTabs_Returns()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="tc014_evaluateAdminTabs_Returns" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc014_evaluateAdminTabs_Returns -->
        <test-method status="SKIP" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="checkForAdminLogout" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="setUp" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="tc015_evaluateAdminTabs_Carousel()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="tc015_evaluateAdminTabs_Carousel" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc015_evaluateAdminTabs_Carousel -->
        <test-method status="SKIP" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="checkForLogin" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="setUp" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="SKIP" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="checkForAdminLogout" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="SKIP" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="checkForLogin" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="SKIP" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="SKIP" signature="tc016_evaluateAdminTabs_Orders()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="tc016_evaluateAdminTabs_Orders" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc016_evaluateAdminTabs_Orders -->
        <test-method status="SKIP" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="checkForAdminLogout" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="SKIP" signature="tc017_evaluateAdminTabs_Products()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="tc017_evaluateAdminTabs_Products" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc017_evaluateAdminTabs_Products -->
        <test-method status="SKIP" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="checkForLogin" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="setUp" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="checkForLogin" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="setUp" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="tc018_evaluateAdminTabs_Settings()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="tc018_evaluateAdminTabs_Settings" duration-ms="1" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc018_evaluateAdminTabs_Settings -->
        <test-method status="SKIP" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="checkForAdminLogout" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="SKIP" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="SKIP" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="checkForAdminLogout" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="SKIP" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="checkForLogin" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="SKIP" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="SKIP" signature="tc019_evaluateAdminTabs_Promotions()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="tc019_evaluateAdminTabs_Promotions" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc019_evaluateAdminTabs_Promotions -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="setUp" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="setUp" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="SKIP" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="checkForLogin" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="SKIP" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="checkForAdminLogout" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="SKIP" signature="tc020_evaluateAdminTabs_Users()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="tc020_evaluateAdminTabs_Users" duration-ms="1" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc020_evaluateAdminTabs_Users -->
        <test-method status="SKIP" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="SKIP" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="checkForAdminLogout" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="SKIP" signature="tc021_evaluateAdminTabs_Blog()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="tc021_evaluateAdminTabs_Blog" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc021_evaluateAdminTabs_Blog -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="setUp" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="checkForLogin" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="SKIP" signature="tc022_evaluateAdminTabs_Store()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="tc022_evaluateAdminTabs_Store" duration-ms="1" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc022_evaluateAdminTabs_Store -->
        <test-method status="SKIP" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="SKIP" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="checkForAdminLogout" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="SKIP" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="checkForLogin" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="setUp" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="SKIP" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="checkForAdminLogout" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="SKIP" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="checkForLogin" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="setUp" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="tc023_evaluateAdminTabs_FeatureCollection()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="tc023_evaluateAdminTabs_FeatureCollection" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc023_evaluateAdminTabs_FeatureCollection -->
        <test-method status="SKIP" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="SKIP" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestAdmin@2d8f65a4]" name="checkForAdminLogout" is-config="true" duration-ms="0" started-at="2015-12-18T19:23:39Z" finished-at="2015-12-18T19:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
      </class> <!-- org.collective.testmethods.CollectiveSanityTestAdmin -->
    </test> <!-- SmokeTesting -->
  </suite> <!-- CollectiveSuite -->
</testng-results>
