<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="11" passed="10">
  <reporter-output>
  </reporter-output>
  <suite name="CollectiveSuite" duration-ms="855191" started-at="2015-12-24T04:57:33Z" finished-at="2015-12-24T05:11:48Z">
    <groups>
    </groups>
    <test name="SmokeTesting" duration-ms="855191" started-at="2015-12-24T04:57:33Z" finished-at="2015-12-24T05:11:48Z">
      <class name="org.collective.testmethods.CollectiveSanityTestCustomer">
        <test-method status="PASS" signature="screenshotCleanUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="screenshotCleanUp" is-config="true" duration-ms="56" started-at="2015-12-24T10:27:33Z" finished-at="2015-12-24T10:27:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotCleanUp -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="beforeTest" is-config="true" duration-ms="4322" started-at="2015-12-24T10:27:33Z" finished-at="2015-12-24T10:27:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="setUp" is-config="true" duration-ms="23571" started-at="2015-12-24T10:27:38Z" finished-at="2015-12-24T10:28:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="checkForLogin" is-config="true" duration-ms="72" started-at="2015-12-24T10:28:01Z" finished-at="2015-12-24T10:28:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="PASS" signature="tc001_collective_signup()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="tc001_collective_signup" duration-ms="6287" started-at="2015-12-24T10:28:01Z" finished-at="2015-12-24T10:28:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc001_collective_signup -->
        <test-method status="PASS" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="checkForAdminLogout" is-config="true" duration-ms="36" started-at="2015-12-24T10:28:07Z" finished-at="2015-12-24T10:28:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="takeScreenshot" is-config="true" duration-ms="1" started-at="2015-12-24T10:28:08Z" finished-at="2015-12-24T10:28:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc001_collective_signup status=SUCCESS method=CollectiveSanityTestCustomer.tc001_collective_signup()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="checkForLogin" is-config="true" duration-ms="17" started-at="2015-12-24T10:28:08Z" finished-at="2015-12-24T10:28:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="PASS" signature="tc002_collective_login()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="tc002_collective_login" duration-ms="4664" started-at="2015-12-24T10:28:08Z" finished-at="2015-12-24T10:28:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc002_collective_login -->
        <test-method status="PASS" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="checkForAdminLogout" is-config="true" duration-ms="20096" started-at="2015-12-24T10:28:12Z" finished-at="2015-12-24T10:28:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2015-12-24T10:28:32Z" finished-at="2015-12-24T10:28:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc002_collective_login status=SUCCESS method=CollectiveSanityTestCustomer.tc002_collective_login()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="checkForLogin" is-config="true" duration-ms="20017" started-at="2015-12-24T10:28:32Z" finished-at="2015-12-24T10:28:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="PASS" signature="tc003_collective_blog()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="tc003_collective_blog" duration-ms="78515" started-at="2015-12-24T10:28:52Z" finished-at="2015-12-24T10:30:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc003_collective_blog -->
        <test-method status="PASS" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="checkForAdminLogout" is-config="true" duration-ms="20043" started-at="2015-12-24T10:30:11Z" finished-at="2015-12-24T10:30:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2015-12-24T10:30:31Z" finished-at="2015-12-24T10:30:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc003_collective_blog status=SUCCESS method=CollectiveSanityTestCustomer.tc003_collective_blog()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="checkForLogin" is-config="true" duration-ms="20034" started-at="2015-12-24T10:30:31Z" finished-at="2015-12-24T10:30:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="PASS" signature="tc004_collective_accessories()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="tc004_collective_accessories" duration-ms="20248" started-at="2015-12-24T10:30:51Z" finished-at="2015-12-24T10:31:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc004_collective_accessories -->
        <test-method status="PASS" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="checkForAdminLogout" is-config="true" duration-ms="20036" started-at="2015-12-24T10:31:11Z" finished-at="2015-12-24T10:31:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2015-12-24T10:31:31Z" finished-at="2015-12-24T10:31:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc004_collective_accessories status=SUCCESS method=CollectiveSanityTestCustomer.tc004_collective_accessories()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="checkForLogin" is-config="true" duration-ms="20016" started-at="2015-12-24T10:31:31Z" finished-at="2015-12-24T10:31:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="FAIL" signature="tc005_collective_accessories_Filter_Brand()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="tc005_collective_accessories_Filter_Brand" duration-ms="141943" started-at="2015-12-24T10:31:51Z" finished-at="2015-12-24T10:34:13Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Timed out after 5 seconds waiting for visibility of Proxy element for: org.openqa.selenium.support.pagefactory.DefaultElementLocator@5fb759d6
Build info: version: '2.44.0', revision: '76d78cf323ce037c5f92db6c1bba601c2ac43ad8', time: '2014-10-23 13:11:40'
System info: host: 'codebrahma', ip: '192.168.56.1', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_60'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, chrome={userDataDir=C:\Users\codeb\AppData\Local\Temp\scoped_dir9408_12943}, takesHeapSnapshot=true, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=47.0.2526.106, platform=WIN8_1, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: 83be9727a4635fbea8a479cc346dfec3]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Timed out after 5 seconds waiting for visibility of Proxy element for: org.openqa.selenium.support.pagefactory.DefaultElementLocator@5fb759d6
Build info: version: '2.44.0', revision: '76d78cf323ce037c5f92db6c1bba601c2ac43ad8', time: '2014-10-23 13:11:40'
System info: host: 'codebrahma', ip: '192.168.56.1', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_60'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, chrome={userDataDir=C:\Users\codeb\AppData\Local\Temp\scoped_dir9408_12943}, takesHeapSnapshot=true, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=47.0.2526.106, platform=WIN8_1, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: 83be9727a4635fbea8a479cc346dfec3
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:79)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
	at org.collective.utils.Waiting.explicitWaitVisibilityOfElement(Waiting.java:34)
	at org.collective.customer.pageobjects.CollectiveBagsPageObjects.verifyProductsDisplay(CollectiveBagsPageObjects.java:42)
	at org.collective.testmethods.CollectiveSanityTestCustomer.tc005_collective_accessories_Filter_Brand(CollectiveSanityTestCustomer.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:773)
	at org.testng.TestRunner.run(TestRunner.java:623)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1110)
	at org.testng.TestNG.run(TestNG.java:1018)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[@id='products_page']"}
  (Session info: chrome=47.0.2526.106)
  (Driver info: chromedriver=2.20.353145 (343b531d31eeb933ec778dbcf7081628a1396067),platform=Windows NT 6.3 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 20.06 seconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.44.0', revision: '76d78cf323ce037c5f92db6c1bba601c2ac43ad8', time: '2014-10-23 13:11:40'
System info: host: 'codebrahma', ip: '192.168.56.1', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_60'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, chrome={userDataDir=C:\Users\codeb\AppData\Local\Temp\scoped_dir9408_12943}, takesHeapSnapshot=true, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=47.0.2526.106, platform=WIN8_1, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: 83be9727a4635fbea8a479cc346dfec3
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:204)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:156)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:599)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:352)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:449)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:357)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:59)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:37)
	at com.sun.proxy.$Proxy11.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:227)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:39)
	at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:213)
	at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:210)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:208)
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc005_collective_accessories_Filter_Brand -->
        <test-method status="PASS" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="checkForAdminLogout" is-config="true" duration-ms="20038" started-at="2015-12-24T10:34:13Z" finished-at="2015-12-24T10:34:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="takeScreenshot" is-config="true" duration-ms="1172" started-at="2015-12-24T10:34:33Z" finished-at="2015-12-24T10:34:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc005_collective_accessories_Filter_Brand status=FAILURE method=CollectiveSanityTestCustomer.tc005_collective_accessories_Filter_Brand()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="checkForLogin" is-config="true" duration-ms="20068" started-at="2015-12-24T10:34:35Z" finished-at="2015-12-24T10:34:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="PASS" signature="tc006_collective_accessories_pagination()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="tc006_collective_accessories_pagination" duration-ms="68707" started-at="2015-12-24T10:34:55Z" finished-at="2015-12-24T10:36:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc006_collective_accessories_pagination -->
        <test-method status="PASS" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="checkForAdminLogout" is-config="true" duration-ms="20070" started-at="2015-12-24T10:36:03Z" finished-at="2015-12-24T10:36:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="takeScreenshot" is-config="true" duration-ms="1" started-at="2015-12-24T10:36:23Z" finished-at="2015-12-24T10:36:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc006_collective_accessories_pagination status=SUCCESS method=CollectiveSanityTestCustomer.tc006_collective_accessories_pagination()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="checkForLogin" is-config="true" duration-ms="20041" started-at="2015-12-24T10:36:23Z" finished-at="2015-12-24T10:36:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="PASS" signature="tc007_collective_sales()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="tc007_collective_sales" duration-ms="1962" started-at="2015-12-24T10:36:44Z" finished-at="2015-12-24T10:36:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc007_collective_sales -->
        <test-method status="PASS" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="checkForAdminLogout" is-config="true" duration-ms="20070" started-at="2015-12-24T10:36:46Z" finished-at="2015-12-24T10:37:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2015-12-24T10:37:06Z" finished-at="2015-12-24T10:37:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc007_collective_sales status=SUCCESS method=CollectiveSanityTestCustomer.tc007_collective_sales()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="checkForLogin" is-config="true" duration-ms="20100" started-at="2015-12-24T10:37:06Z" finished-at="2015-12-24T10:37:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="PASS" signature="tc008_collective_orderGreaterThan20000()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="tc008_collective_orderGreaterThan20000" duration-ms="55487" started-at="2015-12-24T10:37:26Z" finished-at="2015-12-24T10:38:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc008_collective_orderGreaterThan20000 -->
        <test-method status="PASS" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="checkForAdminLogout" is-config="true" duration-ms="20032" started-at="2015-12-24T10:38:21Z" finished-at="2015-12-24T10:38:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="takeScreenshot" is-config="true" duration-ms="1" started-at="2015-12-24T10:38:41Z" finished-at="2015-12-24T10:38:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc008_collective_orderGreaterThan20000 status=SUCCESS method=CollectiveSanityTestCustomer.tc008_collective_orderGreaterThan20000()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="checkForLogin" is-config="true" duration-ms="20037" started-at="2015-12-24T10:38:41Z" finished-at="2015-12-24T10:39:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="PASS" signature="tc009_collective_orderLessOrEqualThan20000()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="tc009_collective_orderLessOrEqualThan20000" duration-ms="33831" started-at="2015-12-24T10:39:01Z" finished-at="2015-12-24T10:39:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc009_collective_orderLessOrEqualThan20000 -->
        <test-method status="PASS" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="checkForAdminLogout" is-config="true" duration-ms="20021" started-at="2015-12-24T10:39:35Z" finished-at="2015-12-24T10:39:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="PASS" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="checkForLogin" is-config="true" duration-ms="20018" started-at="2015-12-24T10:39:55Z" finished-at="2015-12-24T10:40:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2015-12-24T10:39:55Z" finished-at="2015-12-24T10:39:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc009_collective_orderLessOrEqualThan20000 status=SUCCESS method=CollectiveSanityTestCustomer.tc009_collective_orderLessOrEqualThan20000()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="tc010_collective_orderPlacement()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="tc010_collective_orderPlacement" duration-ms="59609" started-at="2015-12-24T10:40:15Z" finished-at="2015-12-24T10:41:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc010_collective_orderPlacement -->
        <test-method status="PASS" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="checkForAdminLogout" is-config="true" duration-ms="10044" started-at="2015-12-24T10:41:15Z" finished-at="2015-12-24T10:41:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="PASS" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="checkForLogin" is-config="true" duration-ms="10061" started-at="2015-12-24T10:41:25Z" finished-at="2015-12-24T10:41:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2015-12-24T10:41:25Z" finished-at="2015-12-24T10:41:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc010_collective_orderPlacement status=SUCCESS method=CollectiveSanityTestCustomer.tc010_collective_orderPlacement()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="tc011_collective_womenTab()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="tc011_collective_womenTab" duration-ms="3533" started-at="2015-12-24T10:41:35Z" finished-at="2015-12-24T10:41:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc011_collective_womenTab -->
        <test-method status="PASS" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="checkForAdminLogout" is-config="true" duration-ms="10011" started-at="2015-12-24T10:41:38Z" finished-at="2015-12-24T10:41:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="takeScreenshot" is-config="true" duration-ms="1" started-at="2015-12-24T10:41:48Z" finished-at="2015-12-24T10:41:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc011_collective_womenTab status=SUCCESS method=CollectiveSanityTestCustomer.tc011_collective_womenTab()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1f57539]" name="tearDownClass" is-config="true" duration-ms="2893" started-at="2015-12-24T10:41:51Z" finished-at="2015-12-24T10:41:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- org.collective.testmethods.CollectiveSanityTestCustomer -->
    </test> <!-- SmokeTesting -->
  </suite> <!-- CollectiveSuite -->
</testng-results>
