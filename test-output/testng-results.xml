<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="8" failed="0" total="11" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="CollectiveSuite" duration-ms="68237" started-at="2016-02-09T18:14:48Z" finished-at="2016-02-09T18:15:56Z">
    <groups>
    </groups>
    <test name="SmokeTesting" duration-ms="68237" started-at="2016-02-09T18:14:48Z" finished-at="2016-02-09T18:15:56Z">
      <class name="org.collective.testmethods.CollectiveSanityTestCustomer">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="beforeSuite" is-config="true" duration-ms="63" started-at="2016-02-09T23:44:47Z" finished-at="2016-02-09T23:44:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="beforeTest" is-config="true" duration-ms="2571" started-at="2016-02-09T23:44:48Z" finished-at="2016-02-09T23:44:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="checkForLogin" is-config="true" duration-ms="105" started-at="2016-02-09T23:44:50Z" finished-at="2016-02-09T23:44:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="setUp" is-config="true" duration-ms="3895" started-at="2016-02-09T23:44:50Z" finished-at="2016-02-09T23:44:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startRecording(java.lang.reflect.Method)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="startRecording" is-config="true" duration-ms="191" started-at="2016-02-09T23:44:54Z" finished-at="2016-02-09T23:44:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.collective.testmethods.CollectiveSanityTestCustomer.tc001_collective_signup() throws java.io.IOException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRecording -->
        <test-method status="PASS" signature="tc001_collective_signup()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="tc001_collective_signup" duration-ms="4878" started-at="2016-02-09T23:44:54Z" finished-at="2016-02-09T23:44:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc001_collective_signup -->
        <test-method status="PASS" signature="callStopRecording()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="callStopRecording" is-config="true" duration-ms="170" started-at="2016-02-09T23:44:59Z" finished-at="2016-02-09T23:44:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callStopRecording -->
        <test-method status="PASS" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="checkForAdminLogout" is-config="true" duration-ms="155" started-at="2016-02-09T23:44:59Z" finished-at="2016-02-09T23:45:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:00Z" finished-at="2016-02-09T23:45:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc001_collective_signup status=SUCCESS method=CollectiveSanityTestCustomer.tc001_collective_signup()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="checkForLogin" is-config="true" duration-ms="1517" started-at="2016-02-09T23:45:00Z" finished-at="2016-02-09T23:45:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="setUp" is-config="true" duration-ms="1001" started-at="2016-02-09T23:45:01Z" finished-at="2016-02-09T23:45:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startRecording(java.lang.reflect.Method)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="startRecording" is-config="true" duration-ms="20" started-at="2016-02-09T23:45:02Z" finished-at="2016-02-09T23:45:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.collective.testmethods.CollectiveSanityTestCustomer.tc002_collective_login() throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRecording -->
        <test-method status="PASS" signature="tc002_collective_login()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="tc002_collective_login" duration-ms="3617" started-at="2016-02-09T23:45:02Z" finished-at="2016-02-09T23:45:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc002_collective_login -->
        <test-method status="PASS" signature="callStopRecording()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="callStopRecording" is-config="true" duration-ms="71" started-at="2016-02-09T23:45:06Z" finished-at="2016-02-09T23:45:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callStopRecording -->
        <test-method status="PASS" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="checkForAdminLogout" is-config="true" duration-ms="20043" started-at="2016-02-09T23:45:06Z" finished-at="2016-02-09T23:45:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:26Z" finished-at="2016-02-09T23:45:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc002_collective_login status=SUCCESS method=CollectiveSanityTestCustomer.tc002_collective_login()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="checkForLogin" is-config="true" duration-ms="1482" started-at="2016-02-09T23:45:26Z" finished-at="2016-02-09T23:45:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="setUp" is-config="true" duration-ms="948" started-at="2016-02-09T23:45:27Z" finished-at="2016-02-09T23:45:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startRecording(java.lang.reflect.Method)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="startRecording" is-config="true" duration-ms="31" started-at="2016-02-09T23:45:28Z" finished-at="2016-02-09T23:45:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.collective.testmethods.CollectiveSanityTestCustomer.tc003_collective_blog()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRecording -->
        <test-method status="PASS" signature="tc003_collective_blog()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="tc003_collective_blog" duration-ms="2632" started-at="2016-02-09T23:45:28Z" finished-at="2016-02-09T23:45:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc003_collective_blog -->
        <test-method status="PASS" signature="callStopRecording()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="callStopRecording" is-config="true" duration-ms="93" started-at="2016-02-09T23:45:31Z" finished-at="2016-02-09T23:45:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callStopRecording -->
        <test-method status="PASS" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="checkForAdminLogout" is-config="true" duration-ms="20651" started-at="2016-02-09T23:45:31Z" finished-at="2016-02-09T23:45:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="PASS" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="takeScreenshot" is-config="true" duration-ms="1" started-at="2016-02-09T23:45:52Z" finished-at="2016-02-09T23:45:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc003_collective_blog status=SUCCESS method=CollectiveSanityTestCustomer.tc003_collective_blog()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="PASS" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="checkForLogin" is-config="true" duration-ms="2008" started-at="2016-02-09T23:45:52Z" finished-at="2016-02-09T23:45:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="FAIL" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="setUp" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:54Z" finished-at="2016-02-09T23:45:54Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[chrome not reachable
  (Session info: chrome=48.0.2564.103)
  (Driver info: chromedriver=2.20.353145 (343b531d31eeb933ec778dbcf7081628a1396067),platform=Windows NT 6.3 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 2.00 seconds
Build info: version: '2.44.0', revision: '76d78cf323ce037c5f92db6c1bba601c2ac43ad8', time: '2014-10-23 13:11:40'
System info: host: 'codebrahma', ip: '192.168.56.1', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_60'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, chrome={userDataDir=C:\Users\codeb\AppData\Local\Temp\scoped_dir5012_15886}, takesHeapSnapshot=true, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=48.0.2564.103, platform=WIN8_1, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: 0ba9c5c923c0581c89ab03b8445f569b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: chrome not reachable
  (Session info: chrome=48.0.2564.103)
  (Driver info: chromedriver=2.20.353145 (343b531d31eeb933ec778dbcf7081628a1396067),platform=Windows NT 6.3 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 2.00 seconds
Build info: version: '2.44.0', revision: '76d78cf323ce037c5f92db6c1bba601c2ac43ad8', time: '2014-10-23 13:11:40'
System info: host: 'codebrahma', ip: '192.168.56.1', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_60'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, chrome={userDataDir=C:\Users\codeb\AppData\Local\Temp\scoped_dir5012_15886}, takesHeapSnapshot=true, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=48.0.2564.103, platform=WIN8_1, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: 0ba9c5c923c0581c89ab03b8445f569b
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:204)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:156)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:599)
	at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:304)
	at org.collective.maincontroller.MainController.setUp(MainController.java:89)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:590)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="startRecording(java.lang.reflect.Method)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="startRecording" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRecording -->
        <test-method status="SKIP" signature="tc004_collective_accessories()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="tc004_collective_accessories" duration-ms="2" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc004_collective_accessories -->
        <test-method status="SKIP" signature="callStopRecording()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="callStopRecording" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callStopRecording -->
        <test-method status="SKIP" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="checkForAdminLogout" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="SKIP" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="SKIP" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="checkForLogin" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="setUp" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="startRecording(java.lang.reflect.Method)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="startRecording" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRecording -->
        <test-method status="SKIP" signature="tc005_collective_accessories_Filter_Brand()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="tc005_collective_accessories_Filter_Brand" duration-ms="1" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc005_collective_accessories_Filter_Brand -->
        <test-method status="SKIP" signature="callStopRecording()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="callStopRecording" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callStopRecording -->
        <test-method status="SKIP" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="checkForAdminLogout" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="SKIP" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="SKIP" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="checkForLogin" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="setUp" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="startRecording(java.lang.reflect.Method)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="startRecording" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRecording -->
        <test-method status="SKIP" signature="tc006_collective_pagination()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="tc006_collective_pagination" duration-ms="2" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc006_collective_pagination -->
        <test-method status="SKIP" signature="callStopRecording()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="callStopRecording" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callStopRecording -->
        <test-method status="SKIP" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="checkForAdminLogout" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="SKIP" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="SKIP" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="checkForLogin" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="setUp" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="startRecording(java.lang.reflect.Method)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="startRecording" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRecording -->
        <test-method status="SKIP" signature="tc007_collective_sales()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="tc007_collective_sales" duration-ms="2" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc007_collective_sales -->
        <test-method status="SKIP" signature="callStopRecording()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="callStopRecording" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callStopRecording -->
        <test-method status="SKIP" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="checkForAdminLogout" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="SKIP" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="SKIP" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="checkForLogin" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="setUp" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="startRecording(java.lang.reflect.Method)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="startRecording" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRecording -->
        <test-method status="SKIP" signature="tc008_collective_orderGreaterThan20000()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="tc008_collective_orderGreaterThan20000" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc008_collective_orderGreaterThan20000 -->
        <test-method status="SKIP" signature="callStopRecording()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="callStopRecording" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callStopRecording -->
        <test-method status="SKIP" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="checkForAdminLogout" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="SKIP" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="SKIP" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="checkForLogin" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="setUp" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="startRecording(java.lang.reflect.Method)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="startRecording" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRecording -->
        <test-method status="SKIP" signature="tc009_collective_orderLessOrEqualThan20000()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="tc009_collective_orderLessOrEqualThan20000" duration-ms="1" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc009_collective_orderLessOrEqualThan20000 -->
        <test-method status="SKIP" signature="callStopRecording()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="callStopRecording" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callStopRecording -->
        <test-method status="SKIP" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="checkForAdminLogout" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="SKIP" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="SKIP" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="checkForLogin" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="SKIP" signature="tc010_collective_orderPlacement()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="tc010_collective_orderPlacement" duration-ms="1" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc010_collective_orderPlacement -->
        <test-method status="SKIP" signature="startRecording(java.lang.reflect.Method)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="startRecording" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRecording -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="setUp" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="callStopRecording()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="callStopRecording" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callStopRecording -->
        <test-method status="SKIP" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="checkForAdminLogout" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="SKIP" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="SKIP" signature="checkForLogin()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="checkForLogin" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForLogin -->
        <test-method status="SKIP" signature="setUp()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="setUp" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="startRecording(java.lang.reflect.Method)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="startRecording" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRecording -->
        <test-method status="SKIP" signature="tc011_collective_placeorder_OrderCancellation()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="tc011_collective_placeorder_OrderCancellation" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc011_collective_placeorder_OrderCancellation -->
        <test-method status="SKIP" signature="callStopRecording()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="callStopRecording" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- callStopRecording -->
        <test-method status="SKIP" signature="checkForAdminLogout()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="checkForAdminLogout" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkForAdminLogout -->
        <test-method status="SKIP" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="takeScreenshot" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method status="SKIP" signature="tearDownClass()[pri:0, instance:org.collective.testmethods.CollectiveSanityTestCustomer@1786dec2]" name="tearDownClass" is-config="true" duration-ms="0" started-at="2016-02-09T23:45:56Z" finished-at="2016-02-09T23:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- org.collective.testmethods.CollectiveSanityTestCustomer -->
    </test> <!-- SmokeTesting -->
  </suite> <!-- CollectiveSuite -->
</testng-results>
